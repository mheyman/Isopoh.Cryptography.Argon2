<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
      <LangVersion>Latest</LangVersion>
      <!--<EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>-->
      <!-- Don't reference the source generator dll directly in consuming projects -->
      <IncludeBuildOutput>false</IncludeBuildOutput> 
      <Nullable>enable</Nullable>
      <ImplicitUsings>true</ImplicitUsings>
      <IsPackable>true</IsPackable>
      <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
      <DevelopmentDependency>true</DevelopmentDependency>
      <IsRoslynComponent>true</IsRoslynComponent>
      <GenerateDocumentationFile>True</GenerateDocumentationFile>
  </PropertyGroup>
    <ItemGroup>
        <AdditionalFiles Include="..\..\stylecop.json" Link="stylecop.json" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="4.10.0" PrivateAssets="all" />
        <PackageReference Include="StyleCop.Analyzers.Unstable" Version="1.2.0.556">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\..\test\Argon2TestVectorType\Argon2TestVectorType.csproj" />
      <ProjectReference Include="..\..\lib\Isopoh.Cryptography.Argon2\Isopoh.Cryptography.Argon2.csproj" />
    </ItemGroup>

    <ItemGroup>
      <None Remove="bin\Debug\netstandard2.0\\Argon2TestVectorSourceGenerator.dll" />
    </ItemGroup>

    <!-- This ensures the library will be packaged as a source generator when we use `dotnet pack` -->
    <ItemGroup>
        <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    </ItemGroup>
</Project>
